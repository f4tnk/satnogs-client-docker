version: '3.8'
services:

  rigctld:
    image: 'librespace/hamlib:4.0'
    user: '999'
    read_only: true
    environment:
      MODEL: '1'
    restart: 'unless-stopped'
    command: 'rigctld'

  rotctld:
    image: 'librespace/hamlib:4.0'
    user: '999'
    read_only: true
    environment:
      MODEL: '1'
    device_cgroup_rules:
      - 'c 188:* rwm'
    #devices:
    #  - '/dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_05670031BD0A-if00-port0:/dev/rot0'
    #  - '/dev/ttyUSB1:/dev/rot0'
    restart: 'unless-stopped'
    command: 'rotctld'
    stop_grace_period: 1s

  gpsd:
    image: 'librespace/satnogs-client:master'
    user: '999'
    read_only: true
    command: 'gpsd -b -N -G /dev/gps0'
    device_cgroup_rules:
      - 'c 188:* rwm'
    #devices:
    #  - '/dev/serial/by-id/usb-Prolific_Technology_Inc._USB-Serial_Controller_D-if00-port0:/dev/gps0'
    #  - '/dev/ttyUSB0:/dev/gps0'
    restart: 'unless-stopped'
    stop_grace_period: 1s

  satnogs_client:
    image: 'librespace/satnogs-client:master'  # LSF docker image
    #image: 'knegge/satnogs-client:lsf-addons'  # as above + gr-satellites and addons
    user: '999'
    read_only: true
    init: true  # init is needed when lauching processes in the background
    env_file:
      - ./station.env
    environment:
      SATNOGS_RIG_IP: 'rigctld'
      SATNOGS_RIG_PORT: '4532'
      SATNOGS_ROT_MODEL: 'ROT_MODEL_NETROTCTL'
      SATNOGS_ROT_PORT: 'rotctld:4533'
      SATNOGS_GPSD_HOST: 'gpsd'  # enable GPS in station.env
      SATNOGS_GPSD_PORT: '2947'
    #command: 'satnogs-client'  # default
    command: 'update-flowgraphs.sh'  # workaround for satnogs-flowgraphs without rig ip support
    device_cgroup_rules:
      - 'c 189:* rwm'
    devices:
      - '/dev/bus/usb'
    volumes:
      - type: 'tmpfs'
        target: '/tmp'
      - type: 'volume'
        source: 'satnogs-client'
        target: '/var/lib/satnogs-client'
      - './update-flowgraphs.sh:/usr/bin/update-flowgraphs.sh'  # flowgraphs workaround script
    restart: 'unless-stopped'
    stop_grace_period: 1s

  auto-scheduler:
    image: 'librespace/satnogs-auto-scheduler:latest'
    build:
      context: https://gitlab.com/librespacefoundation/satnogs/satnogs-auto-scheduler.git  # Image not available yet
    user: '999'
    #command: 'schedule_single_station.py -s 351'  # this command will run once and exit
    command: 'bash -c "while true; do schedule_single_station.py -s $$SATNOGS_STATION_ID; sleep 3600; done"'
    read_only: true
    env_file:
      - ./station.env
    depends_on:
      - satnogs_client
    volumes:
      - type: 'tmpfs'
        target: '/tmp'
    restart: unless-stopped  # du not use with exiting client as this will just loop
    stop_grace_period: 1s

volumes:
  satnogs-client:  # persitant named volume for the station

